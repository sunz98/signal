{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uCC3D\\uC624\\\\Desktop\\\\signal_connection\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\ConsultingSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ConsultingSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst consultants = [{\n  id: 1,\n  name: 'OOO 상담사',\n  image: '/img/homeCategory1.png'\n}, {\n  id: 2,\n  name: 'OOO 상담사',\n  image: '/img/homeCategory2.png'\n}, {\n  id: 3,\n  name: 'OOO 상담사',\n  image: '/img/homeCategory3.png'\n}, {\n  id: 4,\n  name: 'OOO 상담사',\n  image: '/img/homeCategory4.png'\n}, {\n  id: 5,\n  name: 'OOO 상담사',\n  image: '/img/homeCategory5.png'\n}];\nconst ConsultingSection = () => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  // 항상 4개의 이미지를 순환시키는 로직\n  const getVisibleSlides = () => {\n    let visibleSlides = [];\n    for (let i = 0; i < 4; i++) {\n      visibleSlides.push(consultants[(currentIndex + i) % consultants.length]);\n    }\n    return visibleSlides;\n  };\n  const nextSlide = () => {\n    setCurrentIndex(prevIndex => (prevIndex + 1) % consultants.length);\n  };\n  const prevSlide = () => {\n    setCurrentIndex(prevIndex => prevIndex === 0 ? consultants.length - 1 : prevIndex - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"consulting-slider-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"consulting-title\",\n      children: \"\\uC804\\uBB38\\uAC00\\uC640\\uC758 \\uC0C1\\uB2F4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"consulting-slider-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"prev-arrow\",\n        onClick: prevSlide,\n        children: \"\\u276E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"consulting-section\",\n        children: getVisibleSlides().map(consultant => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"consultant\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: consultant.image,\n            alt: consultant.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: consultant.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, consultant.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-arrow\",\n        onClick: nextSlide,\n        children: \"\\u276F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ConsultingSection, \"tusBbsahUVevXfyh6oH5R6YDC9Q=\");\n_c = ConsultingSection;\nexport default ConsultingSection;\n\n/* \r\n// 프로필을 로드하는 방식 (회원가입 후 프로필을 불러올 때 사용)\r\nuseEffect(() => {\r\n  fetch('/api/profiles') // 백엔드에서 프로필 API를 통해 프로필 리스트를 가져옴\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setConsultants(data); // API에서 가져온 데이터를 상태에 저장\r\n    })\r\n    .catch(error => console.error('프로필 로드 중 오류 발생:', error));\r\n}, []);\r\n*/\nvar _c;\n$RefreshReg$(_c, \"ConsultingSection\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","consultants","id","name","image","ConsultingSection","_s","currentIndex","setCurrentIndex","getVisibleSlides","visibleSlides","i","push","length","nextSlide","prevIndex","prevSlide","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","consultant","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/김창오/Desktop/signal_connection/src/main/frontend/src/components/ConsultingSection.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ConsultingSection.css';\r\n\r\nconst consultants = [\r\n  { id: 1, name: 'OOO 상담사', image: '/img/homeCategory1.png' },\r\n  { id: 2, name: 'OOO 상담사', image: '/img/homeCategory2.png' },\r\n  { id: 3, name: 'OOO 상담사', image: '/img/homeCategory3.png' },\r\n  { id: 4, name: 'OOO 상담사', image: '/img/homeCategory4.png' },\r\n  { id: 5, name: 'OOO 상담사', image: '/img/homeCategory5.png' },\r\n];\r\n\r\nconst ConsultingSection = () => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  // 항상 4개의 이미지를 순환시키는 로직\r\n  const getVisibleSlides = () => {\r\n    let visibleSlides = [];\r\n    for (let i = 0; i < 4; i++) {\r\n      visibleSlides.push(consultants[(currentIndex + i) % consultants.length]);\r\n    }\r\n    return visibleSlides;\r\n  };\r\n\r\n  const nextSlide = () => {\r\n    setCurrentIndex((prevIndex) => (prevIndex + 1) % consultants.length);\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    setCurrentIndex((prevIndex) =>\r\n      prevIndex === 0 ? consultants.length - 1 : prevIndex - 1\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"consulting-slider-wrapper\">\r\n      <h2 className=\"consulting-title\">전문가와의 상담</h2>\r\n      <div className=\"consulting-slider-container\">\r\n        <button className=\"prev-arrow\" onClick={prevSlide}>\r\n          &#10094;\r\n        </button>\r\n        <div className=\"consulting-section\">\r\n          {getVisibleSlides().map((consultant) => (\r\n            <div key={consultant.id} className=\"consultant\">\r\n              <img src={consultant.image} alt={consultant.name} />\r\n              <span>{consultant.name}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button className=\"next-arrow\" onClick={nextSlide}>\r\n          &#10095;\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConsultingSection;\r\n\r\n/* \r\n// 프로필을 로드하는 방식 (회원가입 후 프로필을 불러올 때 사용)\r\nuseEffect(() => {\r\n  fetch('/api/profiles') // 백엔드에서 프로필 API를 통해 프로필 리스트를 가져옴\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setConsultants(data); // API에서 가져온 데이터를 상태에 저장\r\n    })\r\n    .catch(error => console.error('프로필 로드 중 오류 발생:', error));\r\n}, []);\r\n*/\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}