{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uCC3D\\uC624\\\\Desktop\\\\Signal_merge\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\CommunityWriteForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './CommunityWriteForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommunityWriteForm = () => {\n  _s();\n  const [category, setCategory] = useState('30');\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [invalidSentences, setInvalidSentences] = useState(null);\n  const [filtered, setfiltered] = useState(false);\n  const navigate = useNavigate(); // 페이지 이동 훅\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // 새로고침 방지\n\n    const requestBody = {\n      title,\n      contents: content,\n      category: mapCategoryToBackendFormat(category)\n    };\n    try {\n      const response = await fetch('http://localhost:8080/api/user/post', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'accept': '*/*'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      const result = await response.json();\n      if (result.filtered) {\n        setInvalidSentences(result.invalidSentences);\n        setfiltered(true);\n      } else {\n        // 작성 성공 시 카테고리 페이지로 이동하며 새로 작성된 게시글을 전달\n        navigate(`/community/gomin/${category}`, {\n          state: {\n            newPost: {\n              title,\n              category,\n              createdAt: new Date().toISOString(),\n              id: Date.now()\n            }\n          }\n        });\n      }\n    } catch (error) {\n      console.error('서버와의 통신 중 오류 발생:', error);\n    }\n  };\n  const mapCategoryToBackendFormat = category => {\n    const categoryMap = {\n      '10': '_10S',\n      '20': '_20S',\n      '30': '_30S',\n      '40': '_40S',\n      'gomsin': 'MILITARY',\n      'CC': 'CC',\n      'office': 'OFFICE',\n      'date-places': 'DATE_LOCATION',\n      'gifts': 'ANNIVERSARY_GIFT',\n      'travel': 'TRAVEL_LOCATION'\n    };\n    return categoryMap[category] || category;\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"write-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"\\uC81C\\uBAA9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: content,\n      onChange: e => setContent(e.target.value),\n      placeholder: \"\\uB0B4\\uC6A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\uC791\\uC131\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(CommunityWriteForm, \"kChn00wT4QnYDl9hKTEQdyq+9ZQ=\", false, function () {\n  return [useNavigate];\n});\n_c = CommunityWriteForm;\nexport default CommunityWriteForm;\nvar _c;\n$RefreshReg$(_c, \"CommunityWriteForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","CommunityWriteForm","_s","category","setCategory","title","setTitle","content","setContent","invalidSentences","setInvalidSentences","filtered","setfiltered","navigate","handleSubmit","e","preventDefault","requestBody","contents","mapCategoryToBackendFormat","response","fetch","method","headers","body","JSON","stringify","result","json","state","newPost","createdAt","Date","toISOString","id","now","error","console","categoryMap","className","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/김창오/Desktop/Signal_merge/src/main/frontend/src/components/CommunityWriteForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './CommunityWriteForm.css';\r\n\r\nconst CommunityWriteForm = () => {\r\n  const [category, setCategory] = useState('30');\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [invalidSentences, setInvalidSentences] = useState(null);\r\n  const [filtered, setfiltered] = useState(false);\r\n\r\n  const navigate = useNavigate();  // 페이지 이동 훅\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); // 새로고침 방지\r\n\r\n    const requestBody = {\r\n      title,\r\n      contents: content,\r\n      category: mapCategoryToBackendFormat(category),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/user/post', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'accept': '*/*',\r\n        },\r\n        body: JSON.stringify(requestBody),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.filtered) {\r\n        setInvalidSentences(result.invalidSentences);\r\n        setfiltered(true);\r\n      } else {\r\n        // 작성 성공 시 카테고리 페이지로 이동하며 새로 작성된 게시글을 전달\r\n        navigate(`/community/gomin/${category}`, {\r\n          state: { newPost: { title, category, createdAt: new Date().toISOString(), id: Date.now() } }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('서버와의 통신 중 오류 발생:', error);\r\n    }\r\n  };\r\n\r\n  const mapCategoryToBackendFormat = (category) => {\r\n    const categoryMap = {\r\n      '10': '_10S',\r\n      '20': '_20S',\r\n      '30': '_30S',\r\n      '40': '_40S',\r\n      'gomsin': 'MILITARY',\r\n      'CC': 'CC',\r\n      'office': 'OFFICE',\r\n      'date-places': 'DATE_LOCATION',\r\n      'gifts': 'ANNIVERSARY_GIFT',\r\n      'travel': 'TRAVEL_LOCATION'\r\n    };\r\n    return categoryMap[category] || category;\r\n  };\r\n\r\n  return (\r\n    <form className=\"write-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        placeholder=\"제목\"\r\n      />\r\n      <textarea\r\n        value={content}\r\n        onChange={(e) => setContent(e.target.value)}\r\n        placeholder=\"내용\"\r\n      />\r\n      <button type=\"submit\">작성하기</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CommunityWriteForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}