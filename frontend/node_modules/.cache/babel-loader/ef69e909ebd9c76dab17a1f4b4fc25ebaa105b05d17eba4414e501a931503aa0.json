{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uCC3D\\uC624\\\\Desktop\\\\Signal_merge\\\\src\\\\main\\\\frontend\\\\src\\\\pages\\\\CommunityPage.js\",\n  _s = $RefreshSig$();\n// src/pages/CommunityPage.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport CommunityNavigation from '../components/CommunityNavigation';\nimport './CommunityPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommunityPage = () => {\n  _s();\n  const {\n    category\n  } = useParams(); // URL 파라미터에서 카테고리 추출\n  const {\n    state\n  } = useLocation(); // 게시글 작성 후 전달된 상태 확인\n  const [posts, setPosts] = useState([]); // 게시글 목록 상태\n  const [loading, setLoading] = useState(true); // 로딩 상태\n\n  // API 호출을 통해 게시글 목록 가져오기\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      try {\n        var _data$contents$;\n        const response = await fetch(`http://localhost:8080/api/common/post?category=${category}&page=0&size=10`);\n        const data = await response.json();\n\n        // 새로 작성된 게시글이 있다면 추가\n        const postsFromApi = ((_data$contents$ = data.contents[0]) === null || _data$contents$ === void 0 ? void 0 : _data$contents$.posts) || [];\n        if (state !== null && state !== void 0 && state.newPost) {\n          setPosts([state.newPost, ...postsFromApi]);\n        } else {\n          setPosts(postsFromApi);\n        }\n      } catch (error) {\n        console.error('게시글을 불러오는 중 오류 발생:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (category) fetchPosts(); // 카테고리가 선택된 경우에만 API 호출\n  }, [category, state]); // 카테고리나 상태 변경 시 실행\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"community-page\",\n    children: [/*#__PURE__*/_jsxDEV(CommunityNavigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"community-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: category ? `${category} 게시판` : '게시판을 선택하세요'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uB85C\\uB529 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uAC8C\\uC2DC\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: post.title\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(CommunityPage, \"t5BOoqBB7ptgl1kh8QMebNp3QYM=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = CommunityPage;\nexport default CommunityPage;\nvar _c;\n$RefreshReg$(_c, \"CommunityPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useParams","CommunityNavigation","jsxDEV","_jsxDEV","CommunityPage","_s","category","state","posts","setPosts","loading","setLoading","fetchPosts","_data$contents$","response","fetch","data","json","postsFromApi","contents","newPost","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","title","id","_c","$RefreshReg$"],"sources":["C:/Users/김창오/Desktop/Signal_merge/src/main/frontend/src/pages/CommunityPage.js"],"sourcesContent":["// src/pages/CommunityPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport CommunityNavigation from '../components/CommunityNavigation';\r\nimport './CommunityPage.css';\r\n\r\nconst CommunityPage = () => {\r\n  const { category } = useParams(); // URL 파라미터에서 카테고리 추출\r\n  const { state } = useLocation();  // 게시글 작성 후 전달된 상태 확인\r\n  const [posts, setPosts] = useState([]);  // 게시글 목록 상태\r\n  const [loading, setLoading] = useState(true);  // 로딩 상태\r\n\r\n  // API 호출을 통해 게시글 목록 가져오기\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:8080/api/common/post?category=${category}&page=0&size=10`\r\n        );\r\n        const data = await response.json();\r\n\r\n        // 새로 작성된 게시글이 있다면 추가\r\n        const postsFromApi = data.contents[0]?.posts || [];\r\n        if (state?.newPost) {\r\n          setPosts([state.newPost, ...postsFromApi]);\r\n        } else {\r\n          setPosts(postsFromApi);\r\n        }\r\n      } catch (error) {\r\n        console.error('게시글을 불러오는 중 오류 발생:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (category) fetchPosts();  // 카테고리가 선택된 경우에만 API 호출\r\n  }, [category, state]);  // 카테고리나 상태 변경 시 실행\r\n\r\n  return (\r\n    <div className=\"community-page\">\r\n      <CommunityNavigation />  {/* 네비게이션 표시 */}\r\n      <div className=\"community-content\">\r\n        <h2>{category ? `${category} 게시판` : '게시판을 선택하세요'}</h2>\r\n        {loading ? (\r\n          <p>로딩 중...</p>\r\n        ) : posts.length === 0 ? (\r\n          <p>게시글이 없습니다.</p>\r\n        ) : (\r\n          <ul>\r\n            {posts.map((post) => (\r\n              <li key={post.id}>{post.title}</li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommunityPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}